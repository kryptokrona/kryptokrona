---
# - name: Ansible delete files .list
#   find:
#     paths: /etc/apt/sources.list.d
#     patterns: "*.list"
#   register: files_to_delete

# - name: Ansible remove file list
#   file:
#     path: "{{ item.path }}"
#     state: absent
#   with_items: "{{ files_to_delete.files }}"

- name: Install Docker prerequisites
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - python3-pip
    - virtualenv
    - python3-setuptools

- name: Add Docker apt key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker apt repo
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable"
    state: present
    update_cache: yes

- name: Install Docker and it's dependencies
  apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present

- name: Install Docker Module for Python
  pip:
    name: docker

- name: Ensure /etc/docker/ directory exists.
  file:
    path: /etc/docker
    state: directory
    mode: 0755
  when: docker_daemon_options.keys() | length > 0

- name: Configure Docker daemon options.
  copy:
    content: "{{ docker_daemon_options | to_nice_json }}"
    dest: /etc/docker/daemon.json
    mode: 0644
  when: docker_daemon_options.keys() | length > 0
  notify: restart docker

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: started
    enabled: true
  ignore_errors: "{{ ansible_check_mode }}"

- name: Remove unused Docker Images (not currently running)
  ansible.builtin.shell: docker image prune -a -f
  args:
    executable: /bin/bash

- include_tasks: docker-users.yml
  when: docker_users | length > 0
