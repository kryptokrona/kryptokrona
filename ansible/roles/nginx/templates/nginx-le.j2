upstream {{ hugin_api_name }}_ws {
    server 127.0.0.1:8080;
}

upstream {{ hugin_api_name }}_api {
    server 127.0.0.1:3000;
}
upstream {{ hugin_api_name }}_monitoring {
    server 127.0.0.1:9090;
}
upstream {{ hugin_api_name }}_stats {
    server 127.0.0.1:9100;
}
upstream {{ hugin_api_name }}_graphs {
    server 127.0.0.1:433;
}


server {
    listen 443 ssl default deferred;
    server_name {{ domain_name }};

    ssl_certificate         /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;

    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;
    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

    ssl_dhparam /etc/nginx/dhparams.pem;
    ssl_prefer_server_ciphers on;

    access_log /var/log/nginx/reverse-access.log;
    error_log /var/log/nginx/reverse-error.log;

    root /var/www/html/;

    location /ws {
        proxy_pass http://{{ hugin_api_name }}_ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    location /api {
        proxy_pass http://{{ hugin_api_name }}_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_hide_header 'Access-Control-Allow-Origin';

        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }
    }

    location /monitoring {
      set $prometheusUrl {{ hugin_api_name }}_monitoring;

      proxy_set_header Accept-Encoding "";
      proxy_pass $prometheusUrl;
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      sub_filter_types text/html;
      sub_filter_once off;
      sub_filter '="/' '="/monitoring/';
      sub_filter 'var PATH_PREFIX = "";' 'var PATH_PREFIX = "/monitoring";';

      rewrite ^/monitoring/?$ /monitoring/graph redirect;
      rewrite ^/monitoring/(.*)$ /$1 break;
  }

  location /prometheus {
    proxy_pass http://{{ hugin_api_name }}_monitoring/api/v1;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
  }

  location /metrics {
    proxy_pass http://{{ hugin_api_name }}_stats/metrics;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
  }

  location /dashboard {
    alias /var/www/html/;
    index graphs.html;
  }
}
