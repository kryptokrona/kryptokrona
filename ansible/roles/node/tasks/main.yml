---
- name: Checkout Repo
  git:
    repo=https://github.com/kryptokrona/kryptokrona.git
    dest=/root/tmp/checkout
    update=yes
    accept_hostkey=yes
    clone=false
    update=false
  register: gitresult

- name: Download boostrap
  when: kryptokrona_daemon_boostrap | length > 0
  get_url:
    url: "{{ kryptokrona_daemon_boostrap }}"
    dest: ~/bootstrap.7z
    mode: '0440'

- name: Extract boostrap
  when: kryptokrona_daemon_boostrap | length > 0
  unarchive:
    src: ~/bootstrap.7z
    dest: ~/.kryptokrona

- name: Create Kryptokrona Daemon Container
  docker_container:
    name: "{{ docker_node_container_name }}"
    image: "{{ docker_kryptokona_image }}:{{ gitresult.after[:7] }}"
    command: /bin/echo success
    state: present
    force_kill: yes
    recreate: yes
    networks:
      - name: "{{ docker_network_name }}"

- name: Start Kryptokrona Daemon Container
  docker_container:
    name: "{{ docker_node_container_name }}"
    image: "{{ docker_kryptokona_image }}:{{ gitresult.after[:7] }}"
    command: "./start.sh"
    env: {
      DATABASE_URL: "postgres://{{ vault_postgres_db_user }}:{{ vault_postgres_db_password }}@127.0.0.1:5432/{{ vault_postgres_db_name }}",
      SYS_HUGIN_NODE_SERVER: "{{ hugin_node_server }}",
      SYS_CRITERIA_USERS_INCLUDE: "",
      SYS_CRITERIA_USERS_EXCLUDE: "",
      SYS_CRITERIA_BOARDS_INCLUDE: "",
      SYS_CRITERIA_BOARDS_EXCLUDE: "",
      SYS_CRITERIA_KEYWORDS_INCLUDE: "",
    }
    networks:
      - name: "{{ docker_network_name }}"